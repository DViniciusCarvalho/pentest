1. Select p and q (primes)
 -> Prime test usind AKS-test:
    -> (x - 1)^p - (x^p - 1) 
2. Calculate the product(n) of p * q
3. Calculate totient(T) by n = (p - 1) * (q - 1)
4. Calculate the public key (E)
 -> Must be a prime
 -> Less than the totient
 -> Cannot be a factor of T
5. Calculate the private key:
 -> Product of D and E, divided by T must result in a remainder of 1
 -> (D * E) mod T = 1 => D = E^(-1) mod T
6. Encrypt:
 -> Plain_text^E mod N = Cipher_text
   -> (Char_code^Public_key) % (p * q) => Cipher_char
7. Decrypt:
 -> Cipher_text^D mod N = Plain_text
   -> (Cipher_char_code^Private_key) % (p * q) => Plain_char

1. Destiny sends the public_key and the N:
    Destiny ----- (public_key, N) -----> Origin

2. Origin encrypts the message with the public_key and the N:
    Destiny ---------------------------- Origin -> (plain_text^public) mod N = cipher_text
    Destiny ---------------------------- Origin <- Cipher_text

3. Origin sends to the destiny just the cipher_text:
    Destiny <----- (cipher_text) ------- Origin

4. Destiny receives the cipher_text and then decrypt with his Private_key and the N:
    Destiny ---------------------------- Origin
    (cipher_text^private) mod N = plain_text
    
5. Destiny understand the message.